import heapq
# A = [1, 2, 3, 4]
# B = 3
# A = [5, 1, 4, 2]
# B = 5
# A = [ 5, 7, 8 ]
# B = 9
# A = [ 6257, 7396, 6462, 8360, 2553, 4838, 6403, 3742, 12, 456, 9748, 5820, 9849, 2977, 557, 9248, 5435, 3030, 6891, 7806, 7039, 8280, 8665, 3028, 17, 9070, 6592, 1902, 7548, 919, 233, 156, 4666, 6694, 8515, 7218, 7883, 4918, 960, 7894, 1725, 7059, 3713, 7925, 35, 621, 3524, 5469, 3651, 414, 9627, 7041, 5046, 8291, 69, 1414, 7360, 3012, 9668, 4908, 3930, 9900, 5063, 4947, 2945, 9930, 2165, 7179, 1199, 9476, 1425, 2923, 6534, 1489, 7199, 6568, 2110, 722, 8388, 5760, 7488, 8014, 9152, 8885, 6305, 5572, 298, 16, 8583, 6317, 1275, 8864, 2568, 2690, 3811, 5512, 2619, 5975, 9043, 169 ]
# B = 61802
# 207515
A = [ 8, 6, 4, 2 ]
B = 8

arr = []
heapq.heapify(arr)
flag = False
for i in range(len(A)):
    heapq.heappush(arr,(A[i],i))
    if A[i] < 0:
        flag = True
        break
if flag == True:
    print(max(A))

max_val = max(A)
while B != 0:
    v, index = heapq.heappop(arr)
    push = v + A[index]
    heapq.heappush(arr, (push,index))
    max_val = max(max_val,push)
    B -= 1

print(max_val)
print(arr)

