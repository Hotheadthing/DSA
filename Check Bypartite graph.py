from collections import deque

A = 3
B = [[0, 1], [0, 2], [1, 2]]
A = 2
B = [[0, 1]]
A = 69
B = [
    [40, 64],
    [29, 60],
    [26, 43],
    [29, 32],
    [32, 47],
    [42, 61],
    [48, 61],
    [26, 52],
    [24, 34],
    [35, 55],
    [14, 60],
    [53, 62],
    [61, 63],
    [13, 53],
    [16, 62],
    [62, 64],
    [56, 68],
    [2, 23],
    [7, 55],
    [3, 60],
    [32, 51],
    [2, 18],
    [1, 43],
    [5, 37],
    [4, 51],
    [27, 55],
    [15, 30],
    [13, 65],
    [7, 13],
    [28, 48],
    [36, 50],
    [3, 7],
    [30, 46],
    [1, 35],
    [47, 68],
    [37, 62],
    [37, 58],
    [8, 22],
    [19, 45],
    [6, 64],
    [9, 55],
    [32, 46],
    [48, 56],
    [26, 59],
    [8, 46],
    [44, 66],
    [50, 60],
    [40, 46],
    [30, 68],
    [26, 44],
    [5, 32],
    [9, 34],
    [36, 45],
    [47, 48]
]
A = 94
B = [
  [10, 82],
  [43, 64],
  [24, 56],
  [35, 66],
  [44, 70],
  [7, 27],
  [29, 82],
  [1, 86],
  [5, 27],
  [68, 82],
  [5, 41],
  [36, 64],
  [0, 38],
  [30, 92],
  [51, 88],
  [12, 52],
  [45, 59],
  [40, 41],
  [17, 28],
  [43, 46],
  [22, 62],
  [17, 25],
  [38, 91],
  [44, 74],
  [26, 57],
  [27, 88],
  [57, 68],
  [19, 76],
  [63, 85],
  [32, 36],
  [3, 50],
  [42, 71],
  [44, 75],
  [56, 92],
  [23, 47],
  [40, 93],
  [56, 59],
  [24, 51],
  [46, 68],
  [32, 90],
  [25, 37],
  [26, 92],
  [3, 9],
  [76, 90],
  [68, 93],
  [34, 48],
  [53, 71],
  [15, 79],
  [10, 37],
  [13, 66],
  [66, 79],
  [17, 26],
  [3, 41],
  [45, 57],
  [73, 92],
  [14, 28],
  [67, 92],
  [33, 39],
  [25, 63],
  [20, 71],
  [22, 29],
  [33, 49],
  [9, 41],
  [26, 80]
]
# A = 5
# B = [
#     [1, 3],
#     [1, 4],
#     [3, 2],
#     [3, 5]
# ]
A = 3
B = [
       [1, 2],
       [1, 3]
     ]
A = 15
B = [
  [7, 5],
  [15, 14],
  [11, 2],
  [8, 7],
  [10, 3],
  [5, 3],
  [4, 2],
  [6, 4],
  [13, 2],
  [3, 2],
  [14, 11],
  [12, 9],
  [2, 1],
  [9, 2]
] # 42
A = 8
B = [
  [4, 1],
  [6, 3],
  [8, 1],
  [5, 2],
  [3, 2],
  [2, 1],
  [7, 6]
] #9
arr = [[] for i in range(A+1)]
for i in range(len(B)):
    arr[B[i][0]].append(B[i][1])
    arr[B[i][1]].append(B[i][0])
print(arr)

mod = 1000000007
def bfs(adj,zer,one):
    colo = [-1] * (A+1)
    q = deque()
    for i in range(A+1):
        if colo[i] == -1:
            q.append([i,0])
            colo[i] = 0
        while q:
            ind,clr = q.popleft()
            for val in adj[ind]:
                if colo[val] == clr:
                    return 0
                if colo[val] == -1:
                    if clr == 1:
                        colo[val] = 0
                        zer += 1
                    else:
                        colo[val] = 1
                        one += 1
                    q.append([val,colo[val]])
    return [1, zer, one]


val= bfs(arr,0,0)
if val[0] == 1:
    ze = (val[1] + 1) % mod
    on = (val[2]) % mod
    ans = ((ze * on) - (A-1)) % mod
    print(ans)

# zeros = 0
# ones = 0
# for i in range(2,len(val)):
#     if val[i] == 0:
#         zeros += 1
#     else:
#         ones += 1
# print(zeros,ones)
# if val[0] == 1:
#     road = val[1]
#     count = 0
#     for i in range(2,len(val[1])):
#         if val[1][i] == 0:
#             count += 1
#     print(count)



